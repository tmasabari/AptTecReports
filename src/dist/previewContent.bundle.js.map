{"version":3,"file":"previewContent.bundle.js","mappings":"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","sources":["webpack://apttec-reports/./Resources/Scripts/printContent/jsonToHtml.js","webpack://apttec-reports/./Resources/Scripts/Common/utilities.js","webpack://apttec-reports/./Resources/Scripts/printContent/report.js","webpack://apttec-reports/./Resources/Scripts/printContent/pagedjs-hooks.js","webpack://apttec-reports/./Resources/Scripts/printContent/pagedjs-repeat-table-header.js"],"sourcesContent":["'use strict';\r\nimport { firstNCharacters } from '../Common/utilities.js';\r\nexport function appendJsonAsDataTable(aptTecReports, tableIndex, tableConfiguration, \r\n    tableDataSource, contentDOMElement) {\r\n\r\n    //filter is equivalent to WHERE\r\n    const printableColumns = tableConfiguration.filter(function (column) {\r\n        return column.isPrint === true;\r\n    });\r\n\r\n    var tableId = 'tblReport' + tableIndex;\r\n    var tableTag = '<table id=\"' + tableId + '\" class=\"dataTable display\" width=\"100%\"></table>'; \r\n    contentDOMElement.append(tableTag);\r\n    const tableData = (tableDataSource) ? aptTecReports.reportData.Data[tableDataSource] \r\n        : aptTecReports.reportData.Data;\r\n\r\n    //filter is equivalent to WHERE\r\n    var colMaxLengthDefined = printableColumns.filter(function (colConfig) {\r\n        return (colConfig.maxLength) && colConfig.maxLength > 0;\r\n    });\r\n    colMaxLengthDefined.forEach((colConfig) => {\r\n        firstNCharacters(tableData, colConfig.field, colConfig.maxLength);\r\n    });\r\n    const countableColumns = tableConfiguration.filter(function (column) {\r\n        return column.TotalCount === true;\r\n    });\r\n    const dataTableConfig = {\r\n        info: false, //hide footer Showing 1 to 79 of 79 entries\r\n        ordering: false,\r\n        paging: false,\r\n        searching: false,\r\n        data: tableData,\r\n        columns: mapProperties(aptTecReports, printableColumns),\r\n    };\r\n    if (countableColumns && countableColumns.length > 0) {\r\n        dataTableConfig.footerCallback =  function () {  //row, data, start, end, display\r\n            let api = this.api();\r\n    \r\n            // Remove the formatting to get integer data for summation\r\n            // https://cdn.datatables.net/plug-ins/1.12.1/api/sum().js\r\n            let numValue = function (i) {\r\n                return typeof i === 'string'\r\n                    ? i.replace(/[^\\d.-]/g, '') * 1     // /[\\$,]/g, ''\r\n                    : typeof i === 'number' ? i : 0;\r\n            };\r\n    \r\n            // Total over all pages\r\n            // total = api\r\n            //     .column(4)\r\n            //     .data()\r\n            //     .reduce((a, b) => numValue(a) + numValue(b), 0);\r\n            // // Total over this page\r\n            // pageTotal = api\r\n            //     .column(4, { page: 'current' })\r\n            //     .data()\r\n            //     .reduce((a, b) => numValue(a) + numValue(b), 0);\r\n\r\n            // Sum each of 4 columns, beginning with col[0]:\r\n            for (var i = 0; i < printableColumns.length; i++) {\r\n                const columnConfig = printableColumns[i];\r\n                if (columnConfig.TotalCount === true) {\r\n                    let sum = api.column(i).data()\r\n                        //.sum();\r\n                        .reduce((a, b) => numValue(a) + numValue(b), 0);\r\n                    api.column(i).footer().innerHTML = sum;\r\n                    // Update footer api.column(4).footer().innerHTML = '$' + pageTotal + ' ( $' + total + ' total)';\r\n                }\r\n            }\r\n        };\r\n        const columnCell = '<th></th> ';\r\n        const footerHtml = `<tfoot><tr> ${columnCell.repeat(printableColumns.length)}</tr></tfoot>`;\r\n        $('#' + tableId).append(footerHtml);\r\n    }\r\n    var columnStylesTag = '<Style>';\r\n    $('#' + tableId).DataTable(dataTableConfig);\r\n    for (let index = 0; index < printableColumns.length; index++) {\r\n        const columnConfig = printableColumns[index];\r\n\r\n        var headerColumnStyle = 'cssTH-' + columnConfig.field;\r\n        $(`#${tableId} tr th:nth-child(${index + 1})`).addClass(headerColumnStyle);\r\n        columnStylesTag += `.${headerColumnStyle} { ${(columnConfig.TitleStyle) ? columnConfig.TitleStyle : '' } }\\n`;\r\n\r\n        var contentColumnStyle = 'cssTD-' + columnConfig.field;\r\n        $(`#${tableId} tr td:nth-child(${index + 1})`).addClass(contentColumnStyle);\r\n        columnStylesTag += `.${contentColumnStyle} { ${(columnConfig.ContentStyle) ? columnConfig.ContentStyle : '' } }\\n`;\r\n    }\r\n    columnStylesTag += '</Style>';\r\n\r\n    contentDOMElement.append(columnStylesTag);\r\n}\r\n\r\n// https://printjs.crabbly.com/#cdn\r\n// taken from https://github.com/crabbly/Print.js/blob/master/src/js/json.js\r\nfunction mapProperties(aptTecReports, properties) {\r\n    properties = properties.map(property => {\r\n        return {\r\n            field: typeof property === 'object'\r\n                ? property.field : property,\r\n            displayName: typeof property === 'object'\r\n                ? property.displayName : property,\r\n            columnSize: typeof property === 'object' && property.columnSize\r\n                ? property.columnSize  : 100 / properties.length + '%', \r\n            format: typeof property === 'object' && property.format\r\n                ? property.format : ''\r\n        };\r\n    });\r\n    for (let i = 0; i < properties.length; i++) {\r\n        //for data table https://datatables.net/manual/data/renderers#Functions\r\n        const prop = properties[i];\r\n        prop.data = prop.field;\r\n        prop.title = prop.displayName;\r\n        prop.width= prop.columnSize;\r\n        if ((typeof prop) === 'object' && (prop.format)) {\r\n            const functionName = prop.format.toLowerCase();\r\n            prop.render = aptTecReports.customFunctions[functionName]; //get member function pointer from key notation\r\n        }\r\n    }\r\n\r\n    return properties;\r\n}","'use strict';\n//JSON related ===================================================\n\nexport function mergeExistingProperties(source, obj2) {\n    let obj1 = JSON.parse(JSON.stringify(source));  //deep copy\n    for (const key in obj2) {\n        if ( Object.prototype.hasOwnProperty.call(obj1, key) ) {\n            obj1[key] = obj2[key];\n        }\n    }\n    return obj1;\n}\nexport function firstNCharacters(jsonArray, propertyToModify, n) {\n    jsonArray.forEach(item => {\n        if ( (item[propertyToModify]) && item[propertyToModify].length > n) {\n            item[propertyToModify] = item[propertyToModify].substring(0, n);\n        }\n    });\n    return jsonArray;\n}\n\n//dynamic loading ===================================================\nexport function loadStylesheet(url) {\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = url;\n    // fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css';\n    document.head.appendChild(link);\n}\nexport function loadScript(url, callback, isDefer = false) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.defer = isDefer; // Load script after parsing the DOM\n    script.onload = callback; // Optional: Call a Function when the script is loaded\n    document.head.appendChild(script);\n}\n\n\n//Kendo ===================================================\nexport function getKendoSortedData(gridSelector) {\n    if ($(gridSelector).length === 0)\n        return null;  //if it is not a kendo grid return empty \n    // https://www.telerik.com/forums/get-sorted-items-without-paging\n    var grid = $(gridSelector).data('kendoGrid');\n    if (!(grid))\n        return null;  //if it is not a kendo grid return empty \n\n    var result = null;\n    var dataSource = grid.dataSource;\n    var data = dataSource.data();\n    var sort = dataSource.sort();\n    if (data.length > 0 && sort) {  //sort throws error in case data length =0\n        var query = new window.kendo.data.Query(data);\n        var sortedData = query.sort(sort).data;\n        result = sortedData;\n    }\n    else {\n        result = data;\n    }\n    return result;\n}\n\n// Function to get the device DPI\nexport function getDeviceDPI() {\n    const dpiDiv = document.createElement('div');\n    dpiDiv.style.width = '1in';\n    document.body.appendChild(dpiDiv);\n    const dpi = dpiDiv.offsetWidth;\n    document.body.removeChild(dpiDiv);\n    return dpi;\n}","'use strict';\r\n//css\r\nimport '../../css/printContent/pagedjsTable.css';\r\nimport '../../css/printContent/paper.css';\r\n//scripts\r\nimport { appendJsonAsDataTable } from './jsonToHtml.js';\r\nvar aptTecReports = window.parent.aptTecReports;\r\n// Call the loadAndReplace function when the page loads\r\nwindow.onload = function () {\r\n    // https://stackoverflow.com/questions/18007630/how-to-disable-warning-datatables-warning-requested-unknown-parameter-from-the-d\r\n    $.fn.dataTable.ext.errMode = 'none'; //to suppress the warnings from data table library in case if a property is missing.\r\n    $('.content .dataTable').on('error.dt', function (e, settings, techNote, message) {\r\n        console.error('An error has been reported by DataTables: ', message);\r\n    });\r\n    \r\n    const contentSelector = '.content';\r\n    const contentDOMElement = $(contentSelector);\r\n    var tableIndex = 1;\r\n    if (aptTecReports.ReportParams.Content) {\r\n        for (let contentIndex = 0; contentIndex < aptTecReports.ReportParams.Content.length; contentIndex++) {\r\n            const contentElement = aptTecReports.ReportParams.Content[contentIndex];\r\n            if ( Object.prototype.hasOwnProperty.call(contentElement, 'ContentHtml')  ) {\r\n                var htmlContent = aptTecReports.replacePlaceholders(contentElement.ContentHtml, \r\n                    aptTecReports.reportData.CommonData);\r\n                htmlContent = aptTecReports.replacePlaceholders(htmlContent, \r\n                    aptTecReports.reportData.InstanceData);\r\n                //append/insert at the end template replaced content to contents\r\n                contentDOMElement.append(htmlContent);\r\n            }\r\n            else {\r\n\r\n                if ( Object.prototype.hasOwnProperty.call(contentElement, 'TableContent') && \r\n                    Array.isArray(contentElement.TableContent)) {\r\n                    const tableDataSource = contentElement.DataSource;\r\n                    //Build the printable html data append/insert at the end template replaced content to contents\r\n                    appendJsonAsDataTable(aptTecReports, tableIndex, contentElement.TableContent, tableDataSource, contentDOMElement);\r\n                    tableIndex++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    window.PagedPolyfill.preview(); //render the print preview\r\n};","//https://gist.github.com/theinvensi/e1aacc43bb5a3d852e2e85b08cf85c8a\r\nclass PagedJsHooks extends window.Paged.Handler {\r\n    constructor(chunker, polisher, caller) {\r\n        super(chunker, polisher, caller);\r\n    }\r\n\r\n    /**\r\n     * Before the content is parsed by Paged.js and given IDs, please do the follwing:\r\n     * @param {*} content | → document-fragment made from the original DOM\r\n     */\r\n    beforeParsed(content) {\r\n        window.parent.aptTecReports.raiseEvent('beforePreviewParsed', content);\r\n    }\r\n \r\n    /**\r\n     * Runs after all pages have finished rendering, please do the follwing:\r\n     * @param {*} pages | → array that contains all page nodes\r\n     */\r\n    afterRendered(pages) {\r\n        window.parent.aptTecReports.raiseEvent('afterPreviewRendered', pages);\r\n    }    \r\n}\r\n\r\nwindow.Paged.registerHandlers(PagedJsHooks);","//https://gist.github.com/theinvensi/e1aacc43bb5a3d852e2e85b08cf85c8a\r\nclass RepeatTableHeadersHandler extends Paged.Handler\r\n{\r\n    constructor(chunker, polisher, caller)\r\n    {\r\n        super(chunker, polisher, caller);\r\n        this.splitTablesRefs = [];\r\n    }\r\n\r\n    afterPageLayout(pageElement, page, breakToken, chunker)\r\n    {\r\n        this.chunker = chunker;\r\n        this.splitTablesRefs = [];\r\n\r\n        if (breakToken)\r\n        {\r\n            const node = breakToken.node;\r\n            const tables = this.findAllAncestors(node, 'table');\r\n            if (node.tagName === 'TABLE') tables.push(node);\r\n\r\n            if (tables.length > 0)\r\n            {\r\n                this.splitTablesRefs = tables.map(t => t.dataset.ref);\r\n\r\n                let thead = node.tagName === 'THEAD' ? node : this.findFirstAncestor(node, 'thead');\r\n                if (thead)\r\n                {\r\n                    let lastTheadNode = thead.hasChildNodes() ? thead.lastChild : thead;\r\n                    breakToken.node = this.nodeAfter(lastTheadNode, chunker.source);\r\n                }\r\n\r\n                this.hideEmptyTables(pageElement, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    hideEmptyTables(pageElement, breakTokenNode)\r\n    {\r\n        this.splitTablesRefs.forEach(ref =>\r\n        {\r\n            let table = pageElement.querySelector('[data-ref=\\'' + ref + '\\']');\r\n            if (table)\r\n            {\r\n                let sourceBody = table.querySelector('tbody > tr');\r\n                if (!sourceBody || this.refEquals(sourceBody.firstElementChild, breakTokenNode))\r\n                {\r\n                    table.style.visibility = 'hidden';\r\n                    table.style.position = 'absolute';\r\n                    let lineSpacer = table.nextSibling;\r\n                    if (lineSpacer)\r\n                    {\r\n                        lineSpacer.style.visibility = 'hidden';\r\n                        lineSpacer.style.position = 'absolute';\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    refEquals(a, b)\r\n    {\r\n        return a && a.dataset && b && b.dataset && a.dataset.ref === b.dataset.ref;\r\n    }\r\n\r\n    findFirstAncestor(element, selector)\r\n    {\r\n        while (element.parentNode && element.parentNode.nodeType === 1)\r\n        {\r\n            if (element.parentNode.matches(selector)) return element.parentNode;\r\n            element = element.parentNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findAllAncestors(element, selector)\r\n    {\r\n        const ancestors = [];\r\n        while (element.parentNode && element.parentNode.nodeType === 1)\r\n        {\r\n            if (element.parentNode.matches(selector)) ancestors.unshift(element.parentNode);\r\n            element = element.parentNode;\r\n        }\r\n        return ancestors;\r\n    }\r\n\r\n    layout(rendered, layout)\r\n    {\r\n        this.splitTablesRefs.forEach(ref =>\r\n        {\r\n            const renderedTable = rendered.querySelector('[data-ref=\\'' + ref + '\\']');\r\n            if (renderedTable)\r\n            {\r\n                if (!renderedTable.getAttribute('repeated-headers'))\r\n                {\r\n                    const sourceTable = this.chunker.source.querySelector('[data-ref=\\'' + ref + '\\']');\r\n                    this.repeatColgroup(sourceTable, renderedTable);\r\n                    this.repeatTHead(sourceTable, renderedTable);\r\n                    renderedTable.setAttribute('repeated-headers', true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    repeatColgroup(sourceTable, renderedTable)\r\n    {\r\n        let colgroup = sourceTable.querySelectorAll('colgroup');\r\n        let firstChild = renderedTable.firstChild;\r\n        colgroup.forEach((colgroup) =>\r\n        {\r\n            let clonedColgroup = colgroup.cloneNode(true);\r\n            renderedTable.insertBefore(clonedColgroup, firstChild);\r\n        });\r\n    }\r\n\r\n    repeatTHead(sourceTable, renderedTable)\r\n    {\r\n        let thead = sourceTable.querySelector('thead');\r\n        if (thead)\r\n        {\r\n            let clonedThead = thead.cloneNode(true);\r\n            renderedTable.insertBefore(clonedThead, renderedTable.firstChild);\r\n        }\r\n    }\r\n\r\n    nodeAfter(node, limiter)\r\n    {\r\n        if (limiter && node === limiter) return;\r\n        let significantNode = this.nextSignificantNode(node);\r\n        if (significantNode) return significantNode;\r\n        if (node.parentNode)\r\n        {\r\n            while ((node = node.parentNode))\r\n            {\r\n                if (limiter && node === limiter) return;\r\n                significantNode = this.nextSignificantNode(node);\r\n                if (significantNode) return significantNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    nextSignificantNode(sib)\r\n    {\r\n        while ((sib = sib.nextSibling)) { if (!this.isIgnorable(sib)) return sib; }\r\n        return null;\r\n    }\r\n\r\n    isIgnorable(node)\r\n    {\r\n        return (\r\n            (node.nodeType === 8)\r\n            || ((node.nodeType === 3) && this.isAllWhitespace(node))\r\n        );\r\n    }\r\n\r\n    isAllWhitespace(node)\r\n    {\r\n        return !(/[^\\t\\n\\r ]/.test(node.textContent));\r\n    }\r\n}\r\n\r\nPaged.registerHandlers(RepeatTableHeadersHandler);"],"names":["appendJsonAsDataTable","aptTecReports","tableIndex","tableConfiguration","tableDataSource","contentDOMElement","printableColumns","filter","column","isPrint","tableId","tableTag","append","tableData","reportData","Data","colConfig","maxLength","forEach","jsonArray","propertyToModify","n","field","item","length","substring","countableColumns","TotalCount","dataTableConfig","info","ordering","paging","searching","data","columns","mapProperties","footerCallback","api","this","numValue","i","replace","sum","reduce","a","b","footer","innerHTML","footerHtml","repeat","$","columnStylesTag","DataTable","index","columnConfig","headerColumnStyle","addClass","TitleStyle","contentColumnStyle","ContentStyle","properties","map","property","displayName","columnSize","format","prop","title","width","functionName","toLowerCase","render","customFunctions","window","parent","onload","fn","dataTable","ext","errMode","on","e","settings","techNote","message","console","error","ReportParams","Content","contentIndex","contentElement","Object","prototype","hasOwnProperty","call","htmlContent","replacePlaceholders","ContentHtml","CommonData","InstanceData","Array","isArray","TableContent","DataSource","PagedPolyfill","preview","PagedJsHooks","Paged","Handler","constructor","chunker","polisher","caller","super","beforeParsed","content","raiseEvent","afterRendered","pages","registerHandlers","RepeatTableHeadersHandler","splitTablesRefs","afterPageLayout","pageElement","page","breakToken","node","tables","findAllAncestors","tagName","push","t","dataset","ref","thead","findFirstAncestor","lastTheadNode","hasChildNodes","lastChild","nodeAfter","source","hideEmptyTables","breakTokenNode","table","querySelector","sourceBody","refEquals","firstElementChild","style","visibility","position","lineSpacer","nextSibling","element","selector","parentNode","nodeType","matches","ancestors","unshift","layout","rendered","renderedTable","getAttribute","sourceTable","repeatColgroup","repeatTHead","setAttribute","colgroup","querySelectorAll","firstChild","clonedColgroup","cloneNode","insertBefore","clonedThead","limiter","significantNode","nextSignificantNode","sib","isIgnorable","isAllWhitespace","test","textContent"],"sourceRoot":""}