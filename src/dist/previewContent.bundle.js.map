{"version":3,"file":"previewContent.bundle.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,4WCmB9D,SAASC,EAAoBC,EAAKC,OAAaC,GAC3C,MAAMC,EAAUC,WAAWC,SAASC,cAAcN,GAClD,OAAO,EAAeb,OAAOoB,OAAOJ,EAASF,GAAcE,CAC/D,CAYA,SAASK,EAAcR,EAAKS,EAAcC,EAAWC,GACjD,MAAMC,EAAUb,EAAoBC,GAIpC,OAHIS,IAAcG,EAAQC,UAAYJ,GAClCC,IAAWE,EAAQE,UAAY,aAAaJ,WAC5CC,IAAOC,EAAQE,WAAa,IAAIH,KAC7BC,CACX,CAYA,SAASG,EAAaC,EAAaN,EAAWC,EAAOM,GACjD,MAAMC,EAASV,EAAc,SAAUQ,EAAaN,EAAWC,GAE/D,OADAO,EAAOC,iBAAiB,QAASF,GAC1BC,CACX,CAiBA,SAASE,EAAqBC,EAAIC,EAAcN,EAAaN,EAAWa,EACpEC,EAAW,QAASC,EAAuB,CAAC,EAAGC,EAAmB,GAAIC,GAAmB,GAEzF,IAAIC,EAAgBxB,WAAWC,SAASwB,cAAcP,GACtD,IAAK,EAAiB,KAAM,6DAE5B,MAAMQ,EAAiBR,EAAe,KAAOD,EAC7C,GAAIM,EAAkB,CAClB,MAAMI,EAAe3B,WAAWC,SAASwB,cAAcC,GACvD,GAAIC,EACA,MAAO,CACHA,aAAcA,EACdC,eAAe,EAG3B,CAEA,IAAIC,EAAiB,QAAQZ,MAAOK,KAEpC,GADAD,EAAqB,mBAAqBH,EACtCG,EACA,IAAK,MAAOxC,EAAKa,KAAUX,OAAO+C,QAAQT,GACtCQ,GAAkB,SAAShD,MAAQa,KAG3C,MAAMqC,EAAgB,WAAWF,aAA0BjB,iDACnCN,UAAkBa,aAQ1C,MANiB,UAAbC,EACAI,EAAcd,UAAYqB,EAAgBP,EAAcd,UAExDc,EAAcd,WAAaqB,EAGxB,CACHJ,aAFiB3B,WAAWC,SAASwB,cAAcC,GAGnDE,eAAe,EAEvB,CASA,SAASI,EAAwBC,GAC7B,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAa,CAAEG,KAAM,qBAE5C,OADYC,IAAIC,gBAAgBJ,EAEpC,CASA,SAASK,EAAoBC,GAGzB,OAAOR,EAFYS,KAAKC,UAAUF,EAAQ,KAAM,GAGpD,CAQA,SAASG,EAAgBC,EAAKC,EAAW,aAC3BlD,EAAoB,IAAK,CAC/BmD,KAAMF,EAAKG,SAAWF,IAExBG,OACN,CAQA,SAASC,EAAeL,GACpB,IAAIM,EAAOvD,EAAoB,OAAQ,CACnCmD,KAAMF,EAAKO,IAAK,eAEpBnD,WAAWC,SAASmD,KAAKC,YAAYH,EACzC,CAWA,SAASI,EAAWV,EAAKW,OAAiBzD,EAAW0D,OAAU1D,EAAW2D,OAAU3D,GAChF,IAAI4D,EAAS/D,EAAoB,SAAU,CACvCgE,IAAKf,EAAKR,KAAM,kBAAmBwB,MAAOH,EAASI,MAAOL,EAASM,OAASP,IAEhFvD,WAAWC,SAASmD,KAAKC,YAAYK,EACzC,CCjKA,SAASK,EAAwBC,EAAQC,GACrC,IAAIC,EAASzB,KAAK0B,MAAM1B,KAAKC,UAAUsB,IACvC,IAAK,MAAMnF,KAAOoF,EACTlF,OAAOM,UAAUC,eAAeC,KAAK2E,EAAQrF,KAC9CqF,EAAOrF,GAAOoF,EAAOpF,IAG7B,OAAOqF,CACX,CASA,SAASE,EAAiBC,EAAWC,EAAkBC,GAMnD,OALAF,EAAUG,SAAQC,IACRA,EAAKH,IAAsBG,EAAKH,GAAkBI,OAASH,IAC7DE,EAAKH,GAAoBG,EAAKH,GAAkBK,UAAU,EAAGJ,GACjE,IAEGF,CACX,CAQA,SAASO,EAAmBC,GACxB,IAAI9E,EAAUC,WAAWC,SAASwB,cAAcoD,GAChD,IAAK,EAAW,OAAO,KAEvB,IAAIC,EAAO/E,EAAQgF,KAAK,aACxB,IAAK,EACD,OAAO,KAEX,IACIC,EAAaF,EAAKE,WAClBD,EAAOC,EAAWD,OAClBE,EAAOD,EAAWC,OAStB,OARIF,EAAKL,OAAS,GAAKO,EACP,IAAIC,OAAOC,MAAMJ,KAAKK,MAAML,GACjBE,KAAKA,GAAMF,KAIzBA,CAGjB,CCvDA,SAASM,IAEL,MAAMC,EAASrF,SAASC,cAAc,OACtCoF,EAAOC,MAAMC,MAAQ,MACrBvF,SAASwF,KAAKpC,YAAYiC,GAC1B,MAAMI,EAAMJ,EAAOK,YAEnB,OADA1F,SAASwF,KAAKG,YAAYN,GACnBI,CACX,CC1BO,SAASG,EAAsBC,EAAeC,EAAYC,EAC7DC,EAAiBC,GAGjB,MAAMC,EAAmBH,EAAmBI,QAAO,SAAUC,GACzD,OAA0B,IAAnBA,EAAOC,OAClB,IAEA,IAAIC,EAAU,YAAcR,EACxBS,EAAW,cAAgBD,EAAU,oDACzCL,EAAkBO,OAAOD,GACzB,MAAME,EAAY,EAAoBZ,EAAca,WAAWC,KAAKX,GAC9DH,EAAca,WAAWC,KAGLT,EAAiBC,QAAO,SAAUS,GACxD,OAAQA,EAAmB,WAAKA,EAAUC,UAAY,CAC1D,IACoBtC,SAASqC,IACzBzC,EAAiBsC,EAAWG,EAAUE,MAAOF,EAAUC,UAAU,IAErE,MAAME,EAAmBhB,EAAmBI,QAAO,SAAUC,GACzD,OAA6B,IAAtBA,EAAOY,UAClB,IACMC,EAAkB,CACpBC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,WAAW,EACXvC,KAAM2B,EACNa,QAASC,EAAc1B,EAAeK,IAE1C,GAAIa,GAAoBA,EAAiBtC,OAAS,EAAG,CAEjDwC,EAAgBO,eAAkB,WAC9B,IAAIC,EAAMC,KAAKD,MAIXE,EAAW,SAAUC,GACrB,MAAoB,iBAANA,EACoB,EAA5BA,EAAEC,QAAQ,WAAY,IACT,iBAAND,EAAiBA,EAAI,CACtC,EAcA,IAAK,IAAIA,EAAI,EAAGA,EAAI1B,EAAiBzB,OAAQmD,IAEzC,IAAgC,IADX1B,EAAiB0B,GACrBZ,WAAqB,CAClC,IAAIc,EAAML,EAAIrB,OAAOwB,GAAG9C,OAEnBiD,QAAO,CAACC,EAAGC,IAAMN,EAASK,GAAKL,EAASM,IAAI,GACjDR,EAAIrB,OAAOwB,GAAGM,SAASzH,UAAYqH,CAEvC,CAER,EACA,MACMK,EAAa,eADA,aAC0BC,OAAOlC,EAAiBzB,uBACrE4D,EAAE,IAAM/B,GAASE,OAAO2B,EAC5B,CACA,IAAIG,EAAkB,UACtBD,EAAE,IAAM/B,GAASiC,UAAUtB,GAC3B,IAAK,IAAIuB,EAAQ,EAAGA,EAAQtC,EAAiBzB,OAAQ+D,IAAS,CAC1D,MAAMC,EAAevC,EAAiBsC,GAEtC,IAAIE,EAAoB,SAAWD,EAAa3B,MAChDuB,EAAE,IAAI/B,qBAA2BkC,EAAQ,MAAMG,SAASD,GACxDJ,GAAmB,IAAII,OAAwBD,EAAuB,WAAIA,EAAaG,WAAa,SAEpG,IAAIC,EAAqB,SAAWJ,EAAa3B,MACjDuB,EAAE,IAAI/B,qBAA2BkC,EAAQ,MAAMG,SAASE,GACxDP,GAAmB,IAAIO,OAAyBJ,EAAyB,aAAIA,EAAaK,aAAe,QAC7G,CACAR,GAAmB,WAEnBrC,EAAkBO,OAAO8B,EAC7B,CAIA,SAASf,EAAc1B,EAAekD,GAClCA,EAAaA,EAAWC,KAAIC,IACjB,CACHnC,MAA2B,iBAAbmC,EACRA,EAASnC,MAAQmC,EACvBC,YAAiC,iBAAbD,EACdA,EAASC,YAAcD,EAC7BE,WAAgC,iBAAbF,GAAyBA,EAASE,WAC/CF,EAASE,WAAc,IAAMJ,EAAWtE,OAAS,IACvD2E,OAA4B,iBAAbH,GAAyBA,EAASG,OAC3CH,EAASG,OAAS,OAGhC,IAAK,IAAIxB,EAAI,EAAGA,EAAImB,EAAWtE,OAAQmD,IAAK,CAExC,MAAMzI,EAAO4J,EAAWnB,GAIxB,GAHAzI,EAAK2F,KAAO3F,EAAK2H,MACjB3H,EAAKkK,MAAQlK,EAAK+J,YAClB/J,EAAKoG,MAAOpG,EAAKgK,WACK,iBAAVhK,GAAuBA,EAAW,OAAG,CAC7C,MAAMmK,EAAenK,EAAKiK,OAAOG,cACjCpK,EAAKqK,OAAS3D,EAAc4D,gBAAgBH,EAChD,CACJ,CAEA,OAAOP,CACX,C,mCCjGAhJ,WAAW2J,OAAS3J,WAAW2J,QAAU,CAAC,EAC1C3J,WAAW2J,OAAOC,WCVlB,MAYI,WAAAC,CAAYjH,EAAKkH,EAAc,QAAaC,EAAa,EAAGC,EAAa,IAAMC,EAAO,IAClFtC,KAAK/E,IAAMA,EACX+E,KAAKmC,YAAcA,EACnBnC,KAAKsC,OAASA,EACdtC,KAAKoC,WAAaA,EAClBpC,KAAKqC,WAAaA,EAClBrC,KAAKuC,eAAiB,IAAIC,MAAM,kBAEhCxC,KAAKyC,WAAa,EAClBzC,KAAK0C,YAAc,CACvB,CAOA,cAAMtH,GACF,IAEI,MAAM,gBAAEuH,EAAe,WAAED,SAAqB1C,MAAK,IAEnD,GADAA,KAAK0C,WAAaA,EACdC,GAAmBD,GAAc1C,KAAKmC,YAAa,CACnDnC,KAAKyC,UAAYG,KAAKC,KAAKH,EAAa1C,KAAKsC,QAE7C,MAAM/H,QAAayF,MAAK,IAExB,OADA8C,QAAQC,IAAI,+BACLxI,CACX,CAAO,CAEH,MAAMA,QAAayF,KAAKgD,iBAExB,OADAF,QAAQC,IAAI,8BACLxI,CACX,CACJ,CAAE,MAAO0I,GAEL,MADAH,QAAQG,MAAM,qBAAsBA,GAC9BA,CACV,CACJ,CAOA,oBAAMD,GACF,MAAME,QAAelD,MAAK,GAAgB,GAAI,GAC9C,OAAO,IAAIxF,KAAK,CAAC0I,GACrB,CAEA,OAAM,GACF,IACI,MAAMC,QAAiBC,MAAMpD,KAAK/E,IAAK,CAAEoI,OAAQ,SAIjD,MAAO,CACHV,gBAAkC,UAJjBQ,EAASG,QAAQ/L,IAAI,iBAKtCmL,WAJkBa,SAASJ,EAASG,QAAQ/L,IAAI,mBAMxD,CAAE,MAAO0L,GAEL,OADAH,QAAQG,MAAM,kCAAmCA,GAC1C,CACHN,iBAAiB,EACjBD,WAAY,EAEpB,CACJ,CAEA,OAAM,GACF,MAAMc,EAAS,GACf,IAAIC,EAAY,EAChB,IAAIC,EAAe,EACnB,MAAMC,EAAW,GACXC,EAAY5D,KAAK0C,WACvB,KAAOe,EAAYG,GAAW,CAC1B,MAAMC,EAAUjB,KAAKkB,IAAIL,EAAYzD,KAAKyC,UAAY,EAAGmB,EAAY,GAChD,MACjB,MAAMG,EAAQN,EAAWO,EAAMH,EACzBI,EAAUjE,MAAK,EAAe+D,EAAOC,GACtCE,MAAMC,IACHX,EAAOY,KAAK,CAAEL,QAAOI,UAIrB,MAAME,GADNX,GAAkBM,EAAMD,EAAS,GACEH,EAAa,IAChD5D,KAAKuC,eAAe+B,OAAS,CACzBZ,iBACAE,YACAS,YAEJ/L,SAASiM,cAAcvE,KAAKuC,eAAe,IAI9CiC,OAAOvB,GAEGjD,MAAK,EAAqBiD,EAAOc,EAAOC,KAEvDL,EAASS,KAAKH,EAAQ,EAE1BQ,GACAhB,EAAYI,EAAU,CAC1B,CAUA,aAPMa,QAAQC,IAAIhB,GAGlBH,EAAOlG,MAAK,CAACgD,EAAGC,IAAMD,EAAEyD,MAAQxD,EAAEwD,QAGrB,IAAIvJ,KAAKgJ,EAAOlC,KAAKsD,GAAcA,EAAUT,QAE9D,CAEA,OAAM,CAAeV,EAAWI,GAC5B,MAAMV,EAAWM,EAAY,QACjBL,MAAMpD,KAAK/E,WACVmI,MAAMpD,KAAK/E,IAAK,CACrBqI,QAAS,CAAEuB,MAAO,SAASpB,KAAaI,OAGhD,IAAKV,EAAS2B,GACV,MAAM,IAAIC,MAAM,2CAA2C5B,EAAS6B,UAWxE,aADoB7B,EAAS8B,aAEjC,CAEA,OAAM,CAAqBhC,EAAOQ,EAAWI,GAGzC,GAFAf,QAAQG,MAAM,wBAAyBA,GAEnCjD,KAAKoC,WAAa,EAKlB,aAHM,IAAIsC,SAASQ,GAAYC,WAAWD,EAASlF,KAAKqC,cACxDS,QAAQC,IAAI,8BACZ/C,KAAKoC,aACEpC,MAAK,QACFA,MAAK,EAAeyD,EAAWI,GAAUJ,EAAWI,GAE9D,MAAMZ,CAEd,GDxJJ5K,WAAW2J,OAAOoD,gBAAkB,EACpC/M,WAAW2J,OAAOqD,KAAO,EACzBhN,WAAW2J,OAAOsD,SAAW,EErB7B,IAAInH,EAAgBZ,OAAOgI,OAAOpH,cAElCZ,OAAOpB,OAAS,WAEZwE,EAAE6E,GAAGC,UAAUC,IAAIC,QAAU,OAC7BhF,EAAE,uBAAuBiF,GAAG,YAAY,SAAUC,EAAGC,EAAUC,EAAUC,GACrElD,QAAQG,MAAM,6CAA8C+C,EAChE,IAEA,MACMzH,EAAoBoC,EADF,YAExB,IAAIvC,EAAa,EACjB,GAAID,EAAc8H,aAAaC,QAC3B,IAAK,IAAIC,EAAe,EAAGA,EAAehI,EAAc8H,aAAaC,QAAQnJ,OAAQoJ,IAAgB,CACjG,MAAMC,EAAiBjI,EAAc8H,aAAaC,QAAQC,GAC1D,GAAK/O,OAAOM,UAAUC,eAAeC,KAAKwO,EAAgB,eAAkB,CACxE,IAAIC,EAAclI,EAAcmI,oBAAoBF,EAAeG,YAC/DpI,EAAca,WAAWwH,YAC7BH,EAAclI,EAAcmI,oBAAoBD,EAC5ClI,EAAca,WAAWyH,cAE7BlI,EAAkBO,OAAOuH,EAC7B,MAGI,GAAKjP,OAAOM,UAAUC,eAAeC,KAAKwO,EAAgB,iBACtDM,MAAMC,QAAQP,EAAeQ,cAAe,CAC5C,MAAMtI,EAAkB8H,EAAeS,WAEvC3I,EAAsBC,EAAeC,EAAYgI,EAAeQ,aAActI,EAAiBC,GAC/FH,GACJ,CAER,CAGJb,OAAOuJ,cAAcC,SACzB,C,WC1CA,MAAMC,UAAqBzJ,OAAO0J,MAAMC,QACpC,WAAAhF,CAAYiF,EAASC,EAAUC,GAC3BC,MAAMH,EAASC,EAAUC,EAC7B,CAMA,YAAAE,CAAaC,GACTjK,OAAOgI,OAAOpH,cAAcsJ,WAAW,sBAAuBD,EAClE,CAMA,aAAAE,CAAcC,GACVpK,OAAOgI,OAAOpH,cAAcsJ,WAAW,uBAAwBE,EACnE,EAGJpK,OAAO0J,MAAMW,iBAAiBZ,E,WCtB9B,MAAMa,UAAkCZ,MAAMC,QAC1C,WAAAhF,CAAYiF,EAASC,EAAUC,GAC3BC,MAAMH,EAASC,EAAUC,GACzBrH,KAAK8H,gBAAkB,EAC3B,CAEA,eAAAC,CAAgBC,EAAaC,EAAMC,EAAYf,GAI3C,GAHAnH,KAAKmH,QAAUA,EACfnH,KAAK8H,gBAAkB,GAEnBI,EAAY,CACZ,MAAMC,EAAOD,EAAWC,KAClBC,EAASpI,KAAKqI,iBAAiBF,EAAM,SAG3C,GAFqB,UAAjBA,EAAKG,SAAqBF,EAAOhE,KAAK+D,GAEtCC,EAAOrL,OAAS,EAAG,CACnBiD,KAAK8H,gBAAkBM,EAAO9G,KAAIiH,GAAKA,EAAEC,QAAQC,MAEjD,IAAIC,EAAyB,UAAjBP,EAAKG,QAAsBH,EAAOnI,KAAK2I,kBAAkBR,EAAM,SAC3E,GAAIO,EAAO,CACP,IAAIE,EAAgBF,EAAMG,gBAAkBH,EAAMI,UAAYJ,EAC9DR,EAAWC,KAAOnI,KAAK+I,UAAUH,EAAezB,EAAQ7K,OAC5D,CAEA0D,KAAKgJ,gBAAgBhB,EAAaG,EACtC,CACJ,CACJ,CAEA,eAAAa,CAAgBhB,EAAaiB,GACzBjJ,KAAK8H,gBAAgBjL,SAAQ4L,IACzB,IAAIS,EAAQlB,EAAYlO,cAAc,cAAgB2O,EAAM,MAC5D,GAAIS,EAAO,CACP,IAAIC,EAAaD,EAAMpP,cAAc,cACrC,IAAKqP,GAAcnJ,KAAKoJ,UAAUD,EAAWE,kBAAmBJ,GAAiB,CAC7EC,EAAMtL,MAAM0L,WAAa,SACzBJ,EAAMtL,MAAM2L,SAAW,WACvB,IAAIC,EAAaN,EAAMO,YACnBD,IACAA,EAAW5L,MAAM0L,WAAa,SAC9BE,EAAW5L,MAAM2L,SAAW,WAEpC,CACJ,IAER,CAEA,SAAAH,CAAU9I,EAAGC,GACT,OAAOD,GAAKA,EAAEkI,SAAWjI,GAAKA,EAAEiI,SAAWlI,EAAEkI,QAAQC,MAAQlI,EAAEiI,QAAQC,GAC3E,CAEA,iBAAAE,CAAkBvQ,EAASsR,GACvB,KAAOtR,EAAQuR,YAA8C,IAAhCvR,EAAQuR,WAAWC,UAAgB,CAC5D,GAAIxR,EAAQuR,WAAWE,QAAQH,GAAW,OAAOtR,EAAQuR,WACzDvR,EAAUA,EAAQuR,UACtB,CACA,OAAO,IACX,CAEA,gBAAAtB,CAAiBjQ,EAASsR,GACtB,MAAMI,EAAY,GAClB,KAAO1R,EAAQuR,YAA8C,IAAhCvR,EAAQuR,WAAWC,UACxCxR,EAAQuR,WAAWE,QAAQH,IAAWI,EAAUC,QAAQ3R,EAAQuR,YACpEvR,EAAUA,EAAQuR,WAEtB,OAAOG,CACX,CAEA,MAAAE,CAAOC,EAAUD,GACbhK,KAAK8H,gBAAgBjL,SAAQ4L,IACzB,MAAMyB,EAAgBD,EAASnQ,cAAc,cAAiB2O,EAAM,MACpE,GAAIyB,IACKA,EAAcC,aAAa,oBAAqB,CACjD,MAAMC,EAAcpK,KAAKmH,QAAQ7K,OAAOxC,cAAc,cAAiB2O,EAAM,MAC7EzI,KAAKqK,eAAeD,EAAaF,GACjClK,KAAKsK,YAAYF,EAAaF,GAC9BA,EAAcK,aAAa,oBAAoB,EACnD,CACJ,GAER,CAEA,cAAAF,CAAeD,EAAaF,GACxB,IAAIM,EAAWJ,EAAYK,iBAAiB,YACxCC,EAAaR,EAAcQ,WAC/BF,EAAS3N,SAAS2N,IACd,IAAIG,EAAiBH,EAASI,WAAU,GACxCV,EAAcW,aAAaF,EAAgBD,EAAW,GAE9D,CAEA,WAAAJ,CAAYF,EAAaF,GACrB,IAAIxB,EAAQ0B,EAAYtQ,cAAc,SACtC,GAAI4O,EAAO,CACP,IAAIoC,EAAcpC,EAAMkC,WAAU,GAClCV,EAAcW,aAAaC,EAAaZ,EAAcQ,WAC1D,CACJ,CAEA,SAAA3B,CAAUZ,EAAM4C,GACZ,GAAIA,GAAW5C,IAAS4C,EAAS,OACjC,IAAIC,EAAkBhL,KAAKiL,oBAAoB9C,GAC/C,GAAI6C,EAAiB,OAAOA,EAC5B,GAAI7C,EAAKwB,WACL,KAAQxB,EAAOA,EAAKwB,YAAa,CAC7B,GAAIoB,GAAW5C,IAAS4C,EAAS,OAEjC,GADAC,EAAkBhL,KAAKiL,oBAAoB9C,GACvC6C,EAAiB,OAAOA,CAChC,CAER,CAEA,mBAAAC,CAAoBC,GAChB,KAAQA,EAAMA,EAAIzB,aAAgB,IAAKzJ,KAAKmL,YAAYD,GAAM,OAAOA,EACrE,OAAO,IACX,CAEA,WAAAC,CAAYhD,GACR,OACuB,IAAlBA,EAAKyB,UACiB,IAAlBzB,EAAKyB,UAAmB5J,KAAKoL,gBAAgBjD,EAE1D,CAEA,eAAAiD,CAAgBjD,GACZ,OAAS,aAAakD,KAAKlD,EAAKmD,YACpC,EAGJrE,MAAMW,iBAAiBC,E","sources":["webpack://@apttec/reports/webpack/bootstrap","webpack://@apttec/reports/webpack/runtime/define property getters","webpack://@apttec/reports/webpack/runtime/hasOwnProperty shorthand","webpack://@apttec/reports/webpack/runtime/make namespace object","webpack://@apttec/reports/./node_modules/@apttec/utils/modules/DynamicControls.js","webpack://@apttec/reports/./node_modules/@apttec/utils/modules/Json.js","webpack://@apttec/reports/./node_modules/@apttec/utils/modules/Graphics.js","webpack://@apttec/reports/./Resources/Scripts/printContent/jsonToHtml.js","webpack://@apttec/reports/./node_modules/@apttec/utils/modules/index.js","webpack://@apttec/reports/./node_modules/@apttec/utils/modules/Downloader.js","webpack://@apttec/reports/./Resources/Scripts/printContent/report.js","webpack://@apttec/reports/./Resources/Scripts/printContent/pagedjs-hooks.js","webpack://@apttec/reports/./Resources/Scripts/printContent/pagedjs-repeat-table-header.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Copyright (c) 2023 Sabarinathan Arthanari\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * \n */\n\n/** \n * The list of utility functions to generate the HTML elements dynamically and to load the resources dynamically.\n * These utility functions are available individually as well for tree shaking.\n * @module DynamicControls\n */\nexport { autoDownloadUrl, createButton, createControl, createUrlFromJsonString, \n    createUrlFromObject, loadScript, loadStylesheet, createAssignElement, createButtonAtParent };\n\n/**\n * creates an HTML element and optionally assign the properties\n * \n * @function createAssignElement\n * @param {string} name of the tag to generate. should be a valid HTML tag name. \n * @param {object} the object that containes properties to be assigned to the element. The default value is  undefined\n * @returns {Element} - the created control\n */\nfunction createAssignElement(tag, propObject = undefined) {\n    const element = globalThis.document.createElement(tag);\n    return (propObject) ? Object.assign(element, propObject) : element;\n}\n\n/**\n * creates an HTML element and assign the CSS classes, creates an icon within the element, inserts the text within the element\n * \n * @function createControl\n * @param {string} tag - HTML tag to be generated\n * @param {string} controlClass  - the CSS clases to be used for the element\n * @param {string} iconClass  - the icnon to be inserted between the element\n * @param {string} label  - the text to be inserted between the element\n * @returns {Element} - the created control\n */\nfunction createControl(tag, controlClass, iconClass, label) {\n    const control = createAssignElement(tag);\n    if (controlClass) control.className = controlClass;\n    if (iconClass) control.innerHTML = `<i class=\"${iconClass}\"></i>`;\n    if (label) control.innerHTML += ` ${label}`;\n    return control;\n}\n    \n/**\n * creates an HTML Button and assigns the CSS classes, creates an icon within the element, inserts the text within the Button\n * \n * @function createButton\n * @param {string} buttonClass - the CSS clases to be used for the button\n * @param {string} iconClass  - the icnon to be inserted between the button\n * @param {string} label  - the text to be inserted between the button\n * @param {function} onClick - the click event handler\n * @returns {Element} - the created button\n */\nfunction createButton(buttonClass, iconClass, label, onClick) {\n    const button = createControl('button', buttonClass, iconClass, label);\n    button.addEventListener('click', onClick);\n    return button;\n}\n\n/**\n * creates an HTML Button within an existing element, and assigns the CSS classes, creates an icon within the element, inserts the text within the Button\n * \n * @function createButtonAtParent\n * @param {string} id - Element Id\n * @param {string} buttonParent - Parent element css selector\n * @param {string} buttonClass - the CSS clases to be used for the button\n * @param {string} iconClass  - the icnon to be inserted between the button\n * @param {string} buttonText - the text to be inserted between the button\n * @param {string} location - the valid values are 'start' or 'end'. start-prepend the element. end-append the element \n * @param {object} dataAttributesObject - all the attributes from this object will be applied as the data attributes to be used for the element.\n * @param {string} extraInformation - the extra HTML snippet to be directly applied to the tag\n * @param {boolean} preventDuplicate - if the value is true checks for the existing duplicate button and throws error if already exists\n * @returns {Element} - the created button\n */\nfunction createButtonAtParent(id, buttonParent, buttonClass, iconClass, buttonText,\n    location = 'start', dataAttributesObject = {}, extraInformation = '', preventDuplicate = true) {\n\n    var parentElement = globalThis.document.querySelector(buttonParent) ;\n    if (!(parentElement)) throw 'Could not add a button. Please check buttonParent selector';\n\n    const buttonSelector = buttonParent + ' #' + id;\n    if (preventDuplicate) {\n        const ButtonObject = globalThis.document.querySelector(buttonSelector) ;\n        if (ButtonObject) {\n            return {\n                ButtonObject: ButtonObject,\n                AlreadyExists: true     //if button already exists do not add again\n            };\n        }\n    }\n\n    var attributesText = ` id='${id}' ${extraInformation} `;\n    dataAttributesObject['parent-selector'] = buttonParent;\n    if (dataAttributesObject) {\n        for (const [key, value] of Object.entries(dataAttributesObject)) {\n            attributesText += ` data-${key}='${value}'`;\n        }\n    }\n    const buttonTagText = `<button ${attributesText}  class='${buttonClass}' type='button' >\n                <i class='${iconClass}'></i>${buttonText}</button>`;\n\n    if (location === 'start')\n        parentElement.innerHTML = buttonTagText + parentElement.innerHTML; //prepend html text\n    else\n        parentElement.innerHTML += buttonTagText; //append html text\n\n    const ButtonObject = globalThis.document.querySelector(buttonSelector);\n    return {\n        ButtonObject: ButtonObject,\n        AlreadyExists: false\n    };\n}\n\n/**\n * creates the downloadable URL from the JsonString\n * \n * @function createUrlFromJsonString\n * @param {string} jsonString - the string to be converted to the downloadable URL\n * @returns {string} URL string\n */\nfunction createUrlFromJsonString(jsonString) {\n    const blob = new Blob([jsonString], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    return url;\n}\n\n/**\n * Generates the downloadable URL from the object\n * \n * @function createUrlFromObject\n * @param {object} object - the object to be converted to the JSON string, blob and then to the URL\n * @returns {string} URL string\n */\nfunction createUrlFromObject(object) {\n    const jsonString = JSON.stringify(object, null, 2);\n    //space (2): A string or number that's used to add whitespace to the output JSON string for formatting purposes.\n    return createUrlFromJsonString(jsonString);\n}\n\n/**\n * creates an anchor link and initiates the download by calling the click event\n * \n * @param {string} url - the URL of the resource to download\n * @param {string} filename - the file name is to be used for the download\n */\nfunction autoDownloadUrl(url, filename = 'data.json') {\n    const a = createAssignElement('a', {\n        href: url, download : filename\n    } );\n    a.click();\n}\n\n//dynamic loading ===================================================\n/**\n * Includes the style sheet object to the head of the document.\n * \n * @param {string} url - the url to download the style sheet\n */\nfunction loadStylesheet(url) {\n    var link = createAssignElement('link', {\n        href: url, rel: 'stylesheet'\n    });\n    globalThis.document.head.appendChild(link);\n}\n/**\n * Includes the script object to the head of the document. https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n * \n * @param {string} url - the url to download the script\n * @param {function} callbackOnLoad | call a function after the script is loaded\n * @param {boolean} isDefer | If the async attribute is absent but the defer attribute is present, then the script is executed when the page has finished parsing.\n * @param {boolean} isAsync | If the async attribute is present, then the script will be executed asynchronously as soon as it downloads.\n * The defer attribute may be specified with the async attribute, so legacy browsers that only support defer (and not async) fall back to the defer behavior instead of the default blocking behavior.\n * If neither attribute is present, then the script is fetched and executed immediately, blocking further parsing of the page.\n */\nfunction loadScript(url, callbackOnLoad = undefined, isDefer = undefined, isAsync = undefined) {\n    var script = createAssignElement('script', {\n        src: url, type: 'text/javascript', async: isAsync, defer: isDefer, onload : callbackOnLoad\n    }); \n    globalThis.document.head.appendChild(script);\n} ","/**\r\n * Copyright (c) 2023 Sabarinathan Arthanari\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * \r\n */\r\n\r\n/** \r\n * The list of utility functions to generate and manipulate the Json data.\r\n * These utility functions are available individually as well for tree shaking.\r\n * @module Json\r\n */\r\nexport { mergeExistingProperties, firstNCharacters, getKendoSortedData };\r\n\r\n/**\r\n * Deep copies/clones the target object and merges the properties from the source object to the target \r\n *  only if the property already exists in the target object.\r\n * @param {object} target the destination object to merge the properties and values\r\n * @param {object} source the source object to get the list of properties and values\r\n * @returns the new merged object\r\n */\r\nfunction mergeExistingProperties(target, source) {\r\n    let result = JSON.parse(JSON.stringify(target));  //deep copy\r\n    for (const key in source) {\r\n        if ( Object.prototype.hasOwnProperty.call(result, key) ) {\r\n            result[key] = source[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * iterates through each object in an array and takes first n number of characters in a particular property \r\n * @param {Array} jsonArray the source JSON array to process\r\n * @param {string} propertyToModify the name of the property to trim\r\n * @param {number} n the initial number of characters to trim. integer\r\n * @returns the modified array\r\n */\r\nfunction firstNCharacters(jsonArray, propertyToModify, n) {\r\n    jsonArray.forEach(item => {\r\n        if ( (item[propertyToModify]) && item[propertyToModify].length > n) {\r\n            item[propertyToModify] = item[propertyToModify].substring(0, n);\r\n        }\r\n    });\r\n    return jsonArray;\r\n}\r\n\r\n//Kendo ===================================================\r\n/**\r\n * Get the unpaginated (full) sorted data from the kendo grid\r\n * @param {string} gridSelector the HTML element selector of the kendo grid\r\n * @returns the json array\r\n */\r\nfunction getKendoSortedData(gridSelector) {\r\n    var element = globalThis.document.querySelector(gridSelector);\r\n    if (!(element)) return null;  //if it is not a valid element in the document return empty \r\n    // https://www.telerik.com/forums/get-sorted-items-without-paging\r\n    var grid = element.data('kendoGrid');\r\n    if (!(grid))\r\n        return null;  //if it is not a kendo grid return empty \r\n\r\n    var result = null;\r\n    var dataSource = grid.dataSource;\r\n    var data = dataSource.data();\r\n    var sort = dataSource.sort();\r\n    if (data.length > 0 && sort) {  //sort throws error in case data length =0\r\n        var query = new window.kendo.data.Query(data);\r\n        var sortedData = query.sort(sort).data;\r\n        result = sortedData;\r\n    }\r\n    else {\r\n        result = data;\r\n    }\r\n    return result;\r\n}","/**\r\n * Copyright (c) 2023 Sabarinathan Arthanari\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * \r\n */\r\n\r\n/** \r\n * The list of utility functions to manage the graphics operations.\r\n * These utility functions are available individually as well for tree shaking.\r\n * @module Graphics\r\n*/\r\nexport { getDeviceDPI };\r\n\r\n\r\n/**\r\n * Identifies the DPI of the screen. Generally the horizontal and vertical DPI will be same for display.\r\n * @returns the screen DPI\r\n */\r\nfunction getDeviceDPI()\r\n{\r\n    const dpiDiv = document.createElement('div');\r\n    dpiDiv.style.width = '1in';\r\n    document.body.appendChild(dpiDiv);\r\n    const dpi = dpiDiv.offsetWidth;\r\n    document.body.removeChild(dpiDiv);\r\n    return dpi;\r\n}","'use strict';\r\nimport { firstNCharacters } from '@apttec/utils';\r\nexport function appendJsonAsDataTable(aptTecReports, tableIndex, tableConfiguration, \r\n    tableDataSource, contentDOMElement) {\r\n\r\n    //filter is equivalent to WHERE\r\n    const printableColumns = tableConfiguration.filter(function (column) {\r\n        return column.isPrint === true;\r\n    });\r\n\r\n    var tableId = 'tblReport' + tableIndex;\r\n    var tableTag = '<table id=\"' + tableId + '\" class=\"dataTable display\" width=\"100%\"></table>'; \r\n    contentDOMElement.append(tableTag);\r\n    const tableData = (tableDataSource) ? aptTecReports.reportData.Data[tableDataSource] \r\n        : aptTecReports.reportData.Data;\r\n\r\n    //filter is equivalent to WHERE\r\n    var colMaxLengthDefined = printableColumns.filter(function (colConfig) {\r\n        return (colConfig.maxLength) && colConfig.maxLength > 0;\r\n    });\r\n    colMaxLengthDefined.forEach((colConfig) => {\r\n        firstNCharacters(tableData, colConfig.field, colConfig.maxLength);\r\n    });\r\n    const countableColumns = tableConfiguration.filter(function (column) {\r\n        return column.TotalCount === true;\r\n    });\r\n    const dataTableConfig = {\r\n        info: false, //hide footer Showing 1 to 79 of 79 entries\r\n        ordering: false,\r\n        paging: false,\r\n        searching: false,\r\n        data: tableData,\r\n        columns: mapProperties(aptTecReports, printableColumns),\r\n    };\r\n    if (countableColumns && countableColumns.length > 0) {\r\n        // https://datatables.net/examples/advanced_init/footer_callback.html\r\n        dataTableConfig.footerCallback =  function () {  //row, data, start, end, display\r\n            let api = this.api();\r\n    \r\n            // Remove the formatting to get integer data for summation\r\n            // https://cdn.datatables.net/plug-ins/1.12.1/api/sum().js\r\n            let numValue = function (i) {\r\n                return typeof i === 'string'\r\n                    ? i.replace(/[^\\d.-]/g, '') * 1     // /[\\$,]/g, ''\r\n                    : typeof i === 'number' ? i : 0;\r\n            };\r\n    \r\n            // Total over all pages\r\n            // total = api\r\n            //     .column(4)\r\n            //     .data()\r\n            //     .reduce((a, b) => numValue(a) + numValue(b), 0);\r\n            // // Total over this page\r\n            // pageTotal = api\r\n            //     .column(4, { page: 'current' })\r\n            //     .data()\r\n            //     .reduce((a, b) => numValue(a) + numValue(b), 0);\r\n\r\n            // Sum each of 4 columns, beginning with col[0]:\r\n            for (var i = 0; i < printableColumns.length; i++) {\r\n                const columnConfig = printableColumns[i];\r\n                if (columnConfig.TotalCount === true) {\r\n                    let sum = api.column(i).data()\r\n                        //.sum();\r\n                        .reduce((a, b) => numValue(a) + numValue(b), 0);\r\n                    api.column(i).footer().innerHTML = sum;\r\n                    // Update footer api.column(4).footer().innerHTML = '$' + pageTotal + ' ( $' + total + ' total)';\r\n                }\r\n            }\r\n        };\r\n        const columnCell = '<th></th> ';\r\n        const footerHtml = `<tfoot><tr> ${columnCell.repeat(printableColumns.length)}</tr></tfoot>`;\r\n        $('#' + tableId).append(footerHtml);\r\n    }\r\n    var columnStylesTag = '<Style>';\r\n    $('#' + tableId).DataTable(dataTableConfig);\r\n    for (let index = 0; index < printableColumns.length; index++) {\r\n        const columnConfig = printableColumns[index];\r\n\r\n        var headerColumnStyle = 'cssTH-' + columnConfig.field;\r\n        $(`#${tableId} tr th:nth-child(${index + 1})`).addClass(headerColumnStyle);\r\n        columnStylesTag += `.${headerColumnStyle} { ${(columnConfig.TitleStyle) ? columnConfig.TitleStyle : '' } }\\n`;\r\n\r\n        var contentColumnStyle = 'cssTD-' + columnConfig.field;\r\n        $(`#${tableId} tr td:nth-child(${index + 1})`).addClass(contentColumnStyle);\r\n        columnStylesTag += `.${contentColumnStyle} { ${(columnConfig.ContentStyle) ? columnConfig.ContentStyle : '' } }\\n`;\r\n    }\r\n    columnStylesTag += '</Style>';\r\n\r\n    contentDOMElement.append(columnStylesTag);\r\n}\r\n\r\n// https://printjs.crabbly.com/#cdn\r\n// taken from https://github.com/crabbly/Print.js/blob/master/src/js/json.js\r\nfunction mapProperties(aptTecReports, properties) {\r\n    properties = properties.map(property => {\r\n        return {\r\n            field: typeof property === 'object'\r\n                ? property.field : property,\r\n            displayName: typeof property === 'object'\r\n                ? property.displayName : property,\r\n            columnSize: typeof property === 'object' && property.columnSize\r\n                ? property.columnSize  : 100 / properties.length + '%', \r\n            format: typeof property === 'object' && property.format\r\n                ? property.format : ''\r\n        };\r\n    });\r\n    for (let i = 0; i < properties.length; i++) {\r\n        //for data table https://datatables.net/manual/data/renderers#Functions\r\n        const prop = properties[i];\r\n        prop.data = prop.field;\r\n        prop.title = prop.displayName;\r\n        prop.width= prop.columnSize;\r\n        if ((typeof prop) === 'object' && (prop.format)) {\r\n            const functionName = prop.format.toLowerCase();\r\n            prop.render = aptTecReports.customFunctions[functionName]; //get member function pointer from key notation\r\n        }\r\n    }\r\n\r\n    return properties;\r\n}","/**\n * Copyright (c) 2023 Sabarinathan Arthanari\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Loads the globalThis.AptTec.Downloader with Downloader class\n * Loads the globalThis.AptTec.DynamicControls with the utility functions\n * These utility functions are available individually as well for tree shaking.\n */\n//https://stackoverflow.com/questions/35665759/es6-how-can-you-export-an-imported-module-in-a-single-line\nimport { Downloader } from './Downloader.js';\nimport * as DynamicControls from './DynamicControls.js';\nimport * as Json from './Json.js';\nimport * as Graphics from './Graphics.js';\n\nexport { Downloader } from './Downloader.js';\nexport * from './DynamicControls.js';\nexport * from './Json.js';\nexport * from './Graphics.js';\n\nglobalThis.AptTec = globalThis.AptTec || {};\nglobalThis.AptTec.Downloader = Downloader;\nglobalThis.AptTec.DynamicControls = DynamicControls;\nglobalThis.AptTec.Json = Json;\nglobalThis.AptTec.Graphics = Graphics;\n\n// if (typeof module !== 'undefined') { //&& module.exports\n//     // Node.js environment\n//     // module.exports = {\n//     //     function1: require('./utils/function1'),\n//     //     function2: require('./utils/function2'),\n//     //     Downloader: Downloader\n//     // };\n// } else { // Browser environment Your browser-specific code here \n// }","/**\r\n * Copyright (c) 2023 Sabarinathan Arthanari\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n * \r\n */\r\n\r\n/**\r\n * Download the file using multiple chunks in parallel to increase the download the speed\r\n * The server must support accept-ranges header.\r\n * \r\n */\r\nexport { Downloader };\r\nclass Downloader {\r\n    /**\r\n     * Download the file using multiple chunks in parallel to increase the download the speed\r\n     * The server must support accept-ranges header.\r\n     * if file length is lesser than the minFileSize in bytes, the simple download will be used\r\n     * \r\n     * @param {string} url - The URL to download from.\r\n     * @param {number} minFileSize - the minimum file length in bytes to initiate chunked download. Default value is 1 MB.\r\n     * @param {number} maxRetries - the number of retries will be used in case of a network failure. Default value is 9\r\n     * @param {number} retryDelay - the number of milli seconds to wait in case of a netowrk failure. Default value is 3 seconds.\r\n     * @param {number} splits - the number of chunks to be used at a same time. Default value is 10.\r\n     */\r\n    constructor(url, minFileSize = 1024 * 1024, maxRetries = 9, retryDelay = 3000, splits=10) {\r\n        this.url = url;\r\n        this.minFileSize = minFileSize;\r\n        this.splits = splits;\r\n        this.maxRetries = maxRetries;\r\n        this.retryDelay = retryDelay;\r\n        this.chunkCompleted = new Event('chunkCompleted');\r\n\r\n        this.chunkSize = -1;\r\n        this.fileLength = -1;\r\n    }\r\n\r\n    /**\r\n     * start the download asynchronously\r\n     * \r\n     * @returns {Promise<Blob>} - The data from the URL.\r\n     */\r\n    async download() {\r\n        try {\r\n            // Check if the server supports byte-range requests and get file length.\r\n            const { supportsChunked, fileLength } = await this.#checkChunkedSupport();\r\n            this.fileLength = fileLength;\r\n            if (supportsChunked && fileLength >= this.minFileSize) {\r\n                this.chunkSize = Math.ceil(fileLength / this.splits);\r\n                // If the server supports chunked responses and file length is sufficient, use chunked download.\r\n                const blob = await this.#downloadChunked();\r\n                console.log('Chunked download completed.');\r\n                return blob;\r\n            } else {\r\n                // If not, use a simple download method.\r\n                const blob = await this.downloadSimple();\r\n                console.log('Simple download completed.');\r\n                return blob;\r\n            }\r\n        } catch (error) {\r\n            console.error('An error occurred:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * initiates the unparallel download asynchronously\r\n     * \r\n     * @returns {Promise<Blob>} - The data from the URL.\r\n     */\r\n    async downloadSimple() {\r\n        const buffer = await this.#downloadChunk(-1, -1);\r\n        return new Blob([buffer] );\r\n    }\r\n\r\n    async #checkChunkedSupport() {\r\n        try {\r\n            const response = await fetch(this.url, { method: 'HEAD' });\r\n            const acceptRanges = response.headers.get('accept-ranges');\r\n            const contentLength = parseInt(response.headers.get('content-length'));\r\n\r\n            return {\r\n                supportsChunked: acceptRanges === 'bytes',\r\n                fileLength: contentLength,\r\n            };\r\n        } catch (error) {\r\n            console.error('Error checking chunked support:', error);\r\n            return {\r\n                supportsChunked: false,\r\n                fileLength: 0,\r\n            };\r\n        }\r\n    }\r\n\r\n    async #downloadChunked() {\r\n        const chunks = [];\r\n        let startByte = 0;\r\n        var downloadedSize=0;\r\n        const promises = [];\r\n        const totalSize = this.fileLength;\r\n        while (startByte < totalSize) {\r\n            const endByte = Math.min(startByte + this.chunkSize - 1, totalSize - 1);\r\n            const closureBlock = () => { //create a closure function to maintain the start and end variables\r\n                const start = startByte, end = endByte;\r\n                const promise = this.#downloadChunk(start, end)\r\n                    .then((chunk) => {\r\n                        chunks.push({ start, chunk });\r\n\r\n                        // Calculate and dispatch the download progress.\r\n                        downloadedSize += end - start  + 1;\r\n                        const progress = (downloadedSize / totalSize) * 100;\r\n                        this.chunkCompleted.detail = {\r\n                            downloadedSize,\r\n                            totalSize,\r\n                            progress,\r\n                        };\r\n                        document.dispatchEvent(this.chunkCompleted);\r\n\r\n                        // You can update a progress bar or display the progress to the user here.\r\n                    })\r\n                    .catch((error) => {\r\n                        // Handle download error, including retries.\r\n                        return this.#handleDownloadError(error, start, end);\r\n                    });\r\n                promises.push(promise);\r\n            };\r\n            closureBlock();\r\n            startByte = endByte + 1;\r\n        }\r\n\r\n        // Wait for all chunk promises to complete.\r\n        await Promise.all(promises);\r\n\r\n        // Sort the chunks by their startByte to ensure they are in the correct order.\r\n        chunks.sort((a, b) => a.start - b.start);\r\n\r\n        // Concatenate the chunks in order to create the final Blob.\r\n        const blob = new Blob(chunks.map((chunkData) => chunkData.chunk));\r\n        return blob;\r\n    }\r\n\r\n    async #downloadChunk(startByte, endByte) {\r\n        const response = startByte < 0 \r\n            ? await fetch(this.url) \r\n            :  await fetch(this.url, {\r\n                headers: { Range: `bytes=${startByte}-${endByte}` },\r\n            });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Chunk download failed with status code: ${response.status}`);\r\n        }\r\n        // const body = await response.body;\r\n        // const readResult = await body.getReader().read();\r\n        // const { value, done } = readResult;\r\n\r\n        // if (done) {\r\n        //     throw new Error('Unexpected end of chunk.');\r\n        // }\r\n\r\n        const value = await response.arrayBuffer();\r\n        return value;\r\n    }\r\n\r\n    async #handleDownloadError(error, startByte, endByte) {\r\n        console.error('Chunk download error:', error);\r\n\r\n        if (this.maxRetries > 0) {\r\n            // Retry the chunk download with exponential backoff.\r\n            await new Promise((resolve) => setTimeout(resolve, this.retryDelay));\r\n            console.log('Retrying chunk download...');\r\n            this.maxRetries--;\r\n            return this.#handleDownloadError(\r\n                await this.#downloadChunk(startByte, endByte), startByte, endByte );\r\n        } else {\r\n            throw error; // Max retries reached, propagate the error.\r\n        }\r\n    }\r\n}","'use strict';\r\n//css\r\nimport '../../css/printContent/pagedjsTable.css';\r\nimport '../../css/printContent/paper.css';\r\n//scripts\r\nimport { appendJsonAsDataTable } from './jsonToHtml.js';\r\nvar aptTecReports = window.parent.aptTecReports;\r\n// Call the loadAndReplace function when the page loads\r\nwindow.onload = function () {\r\n    // https://stackoverflow.com/questions/18007630/how-to-disable-warning-datatables-warning-requested-unknown-parameter-from-the-d\r\n    $.fn.dataTable.ext.errMode = 'none'; //to suppress the warnings from data table library in case if a property is missing.\r\n    $('.content .dataTable').on('error.dt', function (e, settings, techNote, message) {\r\n        console.error('An error has been reported by DataTables: ', message);\r\n    });\r\n    \r\n    const contentSelector = '.content';\r\n    const contentDOMElement = $(contentSelector);\r\n    var tableIndex = 1;\r\n    if (aptTecReports.ReportParams.Content) {\r\n        for (let contentIndex = 0; contentIndex < aptTecReports.ReportParams.Content.length; contentIndex++) {\r\n            const contentElement = aptTecReports.ReportParams.Content[contentIndex];\r\n            if ( Object.prototype.hasOwnProperty.call(contentElement, 'ContentHtml')  ) {\r\n                var htmlContent = aptTecReports.replacePlaceholders(contentElement.ContentHtml, \r\n                    aptTecReports.reportData.CommonData);\r\n                htmlContent = aptTecReports.replacePlaceholders(htmlContent, \r\n                    aptTecReports.reportData.InstanceData);\r\n                //append/insert at the end template replaced content to contents\r\n                contentDOMElement.append(htmlContent);\r\n            }\r\n            else {\r\n\r\n                if ( Object.prototype.hasOwnProperty.call(contentElement, 'TableContent') && \r\n                    Array.isArray(contentElement.TableContent)) {\r\n                    const tableDataSource = contentElement.DataSource;\r\n                    //Build the printable html data append/insert at the end template replaced content to contents\r\n                    appendJsonAsDataTable(aptTecReports, tableIndex, contentElement.TableContent, tableDataSource, contentDOMElement);\r\n                    tableIndex++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    window.PagedPolyfill.preview(); //render the print preview\r\n};","//https://gist.github.com/theinvensi/e1aacc43bb5a3d852e2e85b08cf85c8a\r\nclass PagedJsHooks extends window.Paged.Handler {\r\n    constructor(chunker, polisher, caller) {\r\n        super(chunker, polisher, caller);\r\n    }\r\n\r\n    /**\r\n     * Before the content is parsed by Paged.js and given IDs, please do the follwing:\r\n     * @param {*} content | → document-fragment made from the original DOM\r\n     */\r\n    beforeParsed(content) {\r\n        window.parent.aptTecReports.raiseEvent('beforePreviewParsed', content);\r\n    }\r\n \r\n    /**\r\n     * Runs after all pages have finished rendering, please do the follwing:\r\n     * @param {*} pages | → array that contains all page nodes\r\n     */\r\n    afterRendered(pages) {\r\n        window.parent.aptTecReports.raiseEvent('afterPreviewRendered', pages);\r\n    }    \r\n}\r\n\r\nwindow.Paged.registerHandlers(PagedJsHooks);","//https://gist.github.com/theinvensi/e1aacc43bb5a3d852e2e85b08cf85c8a\r\nclass RepeatTableHeadersHandler extends Paged.Handler {\r\n    constructor(chunker, polisher, caller) {\r\n        super(chunker, polisher, caller);\r\n        this.splitTablesRefs = [];\r\n    }\r\n\r\n    afterPageLayout(pageElement, page, breakToken, chunker) {\r\n        this.chunker = chunker;\r\n        this.splitTablesRefs = [];\r\n\r\n        if (breakToken) {\r\n            const node = breakToken.node;\r\n            const tables = this.findAllAncestors(node, 'table');\r\n            if (node.tagName === 'TABLE') tables.push(node);\r\n\r\n            if (tables.length > 0) {\r\n                this.splitTablesRefs = tables.map(t => t.dataset.ref);\r\n\r\n                let thead = node.tagName === 'THEAD' ? node : this.findFirstAncestor(node, 'thead');\r\n                if (thead) {\r\n                    let lastTheadNode = thead.hasChildNodes() ? thead.lastChild : thead;\r\n                    breakToken.node = this.nodeAfter(lastTheadNode, chunker.source);\r\n                }\r\n\r\n                this.hideEmptyTables(pageElement, node);\r\n            }\r\n        }\r\n    }\r\n\r\n    hideEmptyTables(pageElement, breakTokenNode) {\r\n        this.splitTablesRefs.forEach(ref => {\r\n            let table = pageElement.querySelector(\"[data-ref='\" + ref + \"']\");\r\n            if (table) {\r\n                let sourceBody = table.querySelector('tbody > tr');\r\n                if (!sourceBody || this.refEquals(sourceBody.firstElementChild, breakTokenNode)) {\r\n                    table.style.visibility = 'hidden';\r\n                    table.style.position = 'absolute';\r\n                    let lineSpacer = table.nextSibling;\r\n                    if (lineSpacer) {\r\n                        lineSpacer.style.visibility = 'hidden';\r\n                        lineSpacer.style.position = 'absolute';\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    refEquals(a, b) {\r\n        return a && a.dataset && b && b.dataset && a.dataset.ref === b.dataset.ref;\r\n    }\r\n\r\n    findFirstAncestor(element, selector) {\r\n        while (element.parentNode && element.parentNode.nodeType === 1) {\r\n            if (element.parentNode.matches(selector)) return element.parentNode;\r\n            element = element.parentNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findAllAncestors(element, selector) {\r\n        const ancestors = [];\r\n        while (element.parentNode && element.parentNode.nodeType === 1) {\r\n            if (element.parentNode.matches(selector)) ancestors.unshift(element.parentNode);\r\n            element = element.parentNode;\r\n        }\r\n        return ancestors;\r\n    }\r\n\r\n    layout(rendered, layout) {\r\n        this.splitTablesRefs.forEach(ref => {\r\n            const renderedTable = rendered.querySelector('[data-ref=\\'' + ref + '\\']');\r\n            if (renderedTable) {\r\n                if (!renderedTable.getAttribute('repeated-headers')) {\r\n                    const sourceTable = this.chunker.source.querySelector('[data-ref=\\'' + ref + '\\']');\r\n                    this.repeatColgroup(sourceTable, renderedTable);\r\n                    this.repeatTHead(sourceTable, renderedTable);\r\n                    renderedTable.setAttribute('repeated-headers', true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    repeatColgroup(sourceTable, renderedTable) {\r\n        let colgroup = sourceTable.querySelectorAll('colgroup');\r\n        let firstChild = renderedTable.firstChild;\r\n        colgroup.forEach((colgroup) => {\r\n            let clonedColgroup = colgroup.cloneNode(true);\r\n            renderedTable.insertBefore(clonedColgroup, firstChild);\r\n        });\r\n    }\r\n\r\n    repeatTHead(sourceTable, renderedTable) {\r\n        let thead = sourceTable.querySelector('thead');\r\n        if (thead) {\r\n            let clonedThead = thead.cloneNode(true);\r\n            renderedTable.insertBefore(clonedThead, renderedTable.firstChild);\r\n        }\r\n    }\r\n\r\n    nodeAfter(node, limiter) {\r\n        if (limiter && node === limiter) return;\r\n        let significantNode = this.nextSignificantNode(node);\r\n        if (significantNode) return significantNode;\r\n        if (node.parentNode) {\r\n            while ((node = node.parentNode)) {\r\n                if (limiter && node === limiter) return;\r\n                significantNode = this.nextSignificantNode(node);\r\n                if (significantNode) return significantNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    nextSignificantNode(sib) {\r\n        while ((sib = sib.nextSibling)) { if (!this.isIgnorable(sib)) return sib; }\r\n        return null;\r\n    }\r\n\r\n    isIgnorable(node) {\r\n        return (\r\n            (node.nodeType === 8)\r\n            || ((node.nodeType === 3) && this.isAllWhitespace(node))\r\n        );\r\n    }\r\n\r\n    isAllWhitespace(node) {\r\n        return !(/[^\\t\\n\\r ]/.test(node.textContent));\r\n    }\r\n}\r\n\r\nPaged.registerHandlers(RepeatTableHeadersHandler);"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","createAssignElement","tag","propObject","undefined","element","globalThis","document","createElement","assign","createControl","controlClass","iconClass","label","control","className","innerHTML","createButton","buttonClass","onClick","button","addEventListener","createButtonAtParent","id","buttonParent","buttonText","location","dataAttributesObject","extraInformation","preventDuplicate","parentElement","querySelector","buttonSelector","ButtonObject","AlreadyExists","attributesText","entries","buttonTagText","createUrlFromJsonString","jsonString","blob","Blob","type","URL","createObjectURL","createUrlFromObject","object","JSON","stringify","autoDownloadUrl","url","filename","href","download","click","loadStylesheet","link","rel","head","appendChild","loadScript","callbackOnLoad","isDefer","isAsync","script","src","async","defer","onload","mergeExistingProperties","target","source","result","parse","firstNCharacters","jsonArray","propertyToModify","n","forEach","item","length","substring","getKendoSortedData","gridSelector","grid","data","dataSource","sort","window","kendo","Query","getDeviceDPI","dpiDiv","style","width","body","dpi","offsetWidth","removeChild","appendJsonAsDataTable","aptTecReports","tableIndex","tableConfiguration","tableDataSource","contentDOMElement","printableColumns","filter","column","isPrint","tableId","tableTag","append","tableData","reportData","Data","colConfig","maxLength","field","countableColumns","TotalCount","dataTableConfig","info","ordering","paging","searching","columns","mapProperties","footerCallback","api","this","numValue","i","replace","sum","reduce","a","b","footer","footerHtml","repeat","$","columnStylesTag","DataTable","index","columnConfig","headerColumnStyle","addClass","TitleStyle","contentColumnStyle","ContentStyle","properties","map","property","displayName","columnSize","format","title","functionName","toLowerCase","render","customFunctions","AptTec","Downloader","constructor","minFileSize","maxRetries","retryDelay","splits","chunkCompleted","Event","chunkSize","fileLength","supportsChunked","Math","ceil","console","log","downloadSimple","error","buffer","response","fetch","method","headers","parseInt","chunks","startByte","downloadedSize","promises","totalSize","endByte","min","start","end","promise","then","chunk","push","progress","detail","dispatchEvent","catch","closureBlock","Promise","all","chunkData","Range","ok","Error","status","arrayBuffer","resolve","setTimeout","DynamicControls","Json","Graphics","parent","fn","dataTable","ext","errMode","on","e","settings","techNote","message","ReportParams","Content","contentIndex","contentElement","htmlContent","replacePlaceholders","ContentHtml","CommonData","InstanceData","Array","isArray","TableContent","DataSource","PagedPolyfill","preview","PagedJsHooks","Paged","Handler","chunker","polisher","caller","super","beforeParsed","content","raiseEvent","afterRendered","pages","registerHandlers","RepeatTableHeadersHandler","splitTablesRefs","afterPageLayout","pageElement","page","breakToken","node","tables","findAllAncestors","tagName","t","dataset","ref","thead","findFirstAncestor","lastTheadNode","hasChildNodes","lastChild","nodeAfter","hideEmptyTables","breakTokenNode","table","sourceBody","refEquals","firstElementChild","visibility","position","lineSpacer","nextSibling","selector","parentNode","nodeType","matches","ancestors","unshift","layout","rendered","renderedTable","getAttribute","sourceTable","repeatColgroup","repeatTHead","setAttribute","colgroup","querySelectorAll","firstChild","clonedColgroup","cloneNode","insertBefore","clonedThead","limiter","significantNode","nextSignificantNode","sib","isIgnorable","isAllWhitespace","test","textContent"],"sourceRoot":""}